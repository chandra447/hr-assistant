name: Deploy Bedrock Agents

on:
  push:
    branches: [main]

jobs:
  deploy-dev:
    name: Deploy to Development
    runs-on: ubuntu-latest
    environment: development
    permissions:
      id-token: write
      contents: read
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_DEPLOYMENT_ROLE }}
        aws-region: ap-southeast-2
    
    - name: Checkout Bedrock Forge
      uses: actions/checkout@v4
      with:
        repository: 'chandra447/bedrock-forge'
        ref: 'main'
        path: .bedrock-forge

    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Build Bedrock Forge
      working-directory: .bedrock-forge
      run: |
        go build -o ../bedrock-forge ./cmd/bedrock-forge

    - name: Generate Terraform
      run: |
        mkdir -p outputs_tf
        ./bedrock-forge generate . outputs_tf
        
    - name: Debug - Check generated files
      run: |
        echo "Current directory contents:"
        ls -la
        echo "Checking if outputs_tf exists:"
        if [ -d "outputs_tf" ]; then
          echo "outputs_tf directory exists"
          ls -la outputs_tf/
        else
          echo "outputs_tf directory does not exist"
          echo "Creating outputs_tf directory..."
          mkdir -p outputs_tf
          echo "Created outputs_tf directory"
        fi
        
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.5.0"
        
    - name: Terraform Init
      run: |
        ls -la outputs_tf/
        chmod -R 755 outputs_tf/
        cd outputs_tf
        terraform init \
          -backend-config="bucket=${{ secrets.TERRAFORM_STATE_BUCKET }}" \
          -backend-config="key=hr-assistant/dev/terraform.tfstate" \
          -backend-config="region=ap-southeast-2"
          
    - name: Terraform Plan
      run: |
        cd outputs_tf
        terraform plan -out=tfplan
        
    - name: Terraform Apply
      run: |
        cd outputs_tf
        terraform apply tfplan
        
    - name: Upload state
      uses: actions/upload-artifact@v4
      with:
        name: terraform-state-dev
        path: outputs_tf/terraform.tfstate
        
  deploy-prod:
    name: Deploy to Production
    runs-on: ubuntu-latest
    environment: production
    needs: deploy-dev
    permissions:
      id-token: write
      contents: read
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_DEPLOYMENT_ROLE }}
        aws-region: ap-southeast-2
    
    - name: Checkout Bedrock Forge
      uses: actions/checkout@v4
      with:
        repository: 'chandra447/bedrock-forge'
        ref: 'main'
        path: .bedrock-forge

    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Build Bedrock Forge
      working-directory: .bedrock-forge
      run: |
        go build -o ../bedrock-forge ./cmd/bedrock-forge

    - name: Generate Terraform
      run: |
        mkdir -p outputs_tf
        ./bedrock-forge generate . outputs_tf
        
    - name: Debug - Check generated files
      run: |
        echo "Current directory contents:"
        ls -la
        echo "Checking if outputs_tf exists:"
        if [ -d "outputs_tf" ]; then
          echo "outputs_tf directory exists"
          ls -la outputs_tf/
        else
          echo "outputs_tf directory does not exist"
          echo "Creating outputs_tf directory..."
          mkdir -p outputs_tf
          echo "Created outputs_tf directory"
        fi
        
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.5.0"
        
    - name: Terraform Init
      run: |
        ls -la outputs_tf/
        chmod -R 755 outputs_tf/
        cd outputs_tf
        terraform init \
          -backend-config="bucket=${{ secrets.TERRAFORM_STATE_BUCKET }}" \
          -backend-config="key=hr-assistant/prod/terraform.tfstate" \
          -backend-config="region=ap-southeast-2"
          
    - name: Terraform Plan
      run: |
        cd outputs_tf
        terraform plan -out=tfplan
        
    - name: Terraform Apply
      run: |
        cd outputs_tf
        terraform apply tfplan
        
    - name: Upload state
      uses: actions/upload-artifact@v4
      with:
        name: terraform-state-prod
        path: outputs_tf/terraform.tfstate
